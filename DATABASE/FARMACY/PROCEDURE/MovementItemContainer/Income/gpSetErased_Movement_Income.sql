-- Function: gpSetErased_Movement_Income (Integer, TVarChar)

DROP FUNCTION IF EXISTS gpSetErased_Movement_Income (Integer, TVarChar);

CREATE OR REPLACE FUNCTION gpSetErased_Movement_Income(
    IN inMovementId        Integer               , -- ключ Документа
    IN inSession           TVarChar DEFAULT ''     -- сессия пользователя
)
RETURNS VOID
AS
$BODY$
  DECLARE vbUserId Integer;
BEGIN
     -- проверка прав пользователя на вызов процедуры
     vbUserId:= lpCheckRight(inSession, zc_Enum_Process_SetErased_Income());

     -- проверка - если <Master> Проведен, то <Ошибка>
     PERFORM lfCheck_Movement_ParentStatus (inMovementId:= inMovementId, inNewStatusId:= zc_Enum_Status_Erased(), inComment:= 'удалить');

     -- проверка - если есть <Child> Проведен, то <Ошибка>
     PERFORM lfCheck_Movement_ChildStatus (inMovementId:= inMovementId, inNewStatusId:= zc_Enum_Status_Erased(), inComment:= 'удалить');

     IF EXISTS(SELECT ValueData FROM  MovementBoolean 
               WHERE MovementBoolean.DescId = zc_MovementBoolean_Conduct()
                 AND MovementBoolean.MovementId = inMovementId
                 AND MovementBoolean.ValueData = TRUE)
     THEN
       -- Отменяем проведения по ручному количеству
       IF EXISTS(SELECT ValueData FROM MovementItem
                        INNER JOIN MovementItemBoolean ON MovementItemBoolean.DescId = zc_MIBoolean_Conduct()
                                                     AND MovementItemBoolean.MovementItemId = MovementItem.Id
                                                     AND MovementItemBoolean.ValueData = TRUE
                        WHERE MovementItem.MovementId = inMovementId)
       THEN
           PERFORM lpUnConduct_MovementItem_Income (inMovementId, MovementItem.Id, vbUserId) FROM MovementItem
                        INNER JOIN MovementItemBoolean ON MovementItemBoolean.DescId = zc_MIBoolean_Conduct()
                                                     AND MovementItemBoolean.MovementItemId = MovementItem.Id
                                                     AND MovementItemBoolean.ValueData = TRUE
                        WHERE MovementItem.MovementId = inMovementId;
       END IF;

       -- сохранили свойство <Проведен по количеству>
       PERFORM lpInsertUpdate_MovementBoolean (zc_MovementBoolean_Conduct(), inMovementId, False);

       -- сохранили свойство <Дата проведения по количеству>
       PERFORM lpInsertUpdate_MovementDate (zc_MovementDate_Conduct(), inMovementId, CURRENT_TIMESTAMP);
     END IF;
     
     
     -- Удаляем Документ
     PERFORM lpSetErased_Movement (inMovementId := inMovementId
                                 , inUserId     := vbUserId);

END;
$BODY$
  LANGUAGE plpgsql VOLATILE;

/*
 ИСТОРИЯ РАЗРАБОТКИ: ДАТА, АВТОР
               Фелонюк И.В.   Кухтин И.В.   Климентьев К.И.   Манько Д.А.
 03.07.14                                                       *
*/

-- тест
-- SELECT * FROM gpSetErased_Movement_Income (inMovementId:= 149639, inSession:= zfCalc_UserAdmin())
